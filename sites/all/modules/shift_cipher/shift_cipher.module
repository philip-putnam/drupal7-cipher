<?php

function shift_cipher_menu() {
  $items['cipher'] = array(
    'title' => 'Shift Cipher',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shift_cipher_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['encrypted'] = array(
    'title' => 'Phrase Encrypted',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'page callback' => 'shift_cipher_encrypted',
  );
  return $items;
}

function shift_cipher_form() {
  $form['shift_value'] = array(
    '#title' => 'Shift Value',
    '#type' => 'textfield',
    '#description' => t('Shift value'),
    '#element_validate' => array('element_validate_integer_positive'),
    '#required' => TRUE,
  );

  $form['direction'] = array(
    '#title' => 'Direction',
    '#type' => 'textfield',
    '#description' => t('The direction within the alphabet that the cipher will shift, i.e., "right" would be traversing the alphabet how it is read normally. If the letter was "E" with a shift of "3" it would become "H", and "B" with the same shift value of "3" but opposite direction  "left"'),
    '#element_validate' => array('element_validate_term'),
    '#required' => TRUE,
  );

  $form['phrase'] = array(
    '#title' => 'Phrase',
    '#type' => 'textarea',
    '#description' => t('The phrase to cipher shift'),
    '#element_validate' => array('element_validate_symbols'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
          '#type' => 'submit',
          '#value' => 'Encrypt',
      );

  return $form;
}

function element_validate_symbols($element) {
  $pattern = '/[^\w!.?]/';
  if (preg_match_all($pattern, $element['#value'])) {
    form_error($element, t('Please do not include special characters/symbols other than punctuation'));
  }
}

function element_validate_term($element) {
  $element['#value'] = strtolower($element['#value']);
  if (strtolower($element['#value'] != 'right')) {
    if (strtolower($element['#value'] != 'left')) {
      form_error($element, t('Must type "right" or "left" (caps OK).'));
    }
  }
}

function shift_cipher_form_submit($form, &$form_state) {
  $shift_value = $form_state['values']['shift_value'];
  $direction = strtolower($form_state['values']['direction']);
  $phrase = strtolower($form_state['values']['phrase']);
  $split_phrase = str_split($phrase);
  $character_pattern = '/\w/';
  $_SESSION['shift_value'] = $shift_value;
  $new_char = 0;

  if ($shift_value > 26) {
    $quotient = floor($shift_value / 26);
    $shift_value -= (26 * $quotient);
  }

  foreach($split_phrase as &$char) {
    if (preg_match($character_pattern, $char)) {
      $ascii_value = ord($char);
      if ($direction === 'left') {
        $new_char = ($ascii_value - $shift_value);
        if ($new_char < 97) {
          $new_char += 26;
        }
        $char = chr($new_char);
      } else {
        $new_char = ($ascii_value + $shift_value);
        if ($new_char > 122) {
          $new_char -= 26;
        }
        $char = chr($new_char);
      }
    }
  }

  $_SESSION['encrypted_phrase'] = implode($split_phrase);
  $_SESSION['phrase'] = $phrase;
  $form_state['redirect'] = 'encrypted';
}

function shift_cipher_encrypted() {

  return 'Shift Value: ' . $_SESSION['shift_value'] . '<br>Original Phrase: ' . $_SESSION['phrase'] . '<br>Encrypted Phrase: ' . $_SESSION['encrypted_phrase'];
}
